/*
* Change Logs:
* Date           Author       Notes
* 2021-03-27     chenbin      
*/
#ifndef __DRV_NETDEVICE_H__
#define __DRV_NETDEVICE_H__
#include "board.h"

enum netdevice_staus_type
{
	NETDEVICE_STATUS_NULL = 0,
	NETDEVICE_STATUS_ON = 1,
	NETDEVICE_STATUS_OFF = 2,
};

typedef enum
{
	NETDEVICE_CMD_STATUS_SET =				0x01,
	NETDEVICE_CMD_STATUS_GET =				0x02,
	NETDEVICE_CMD_DHCP_SET =					0x03,
	NETDEVICE_CMD_DHCP_GET =					0x04,
	NETDEVICE_CMD_CALLBACK_SET =			0x05,
	NETDEVICE_CMD_CALLBACK_GET =			0x06,
	NETDEVICE_CMD_PING =							0x07,
	NETDEVICE_CMD_NETSTAT =						0x08,
	
	NETDEVICE_CMD_IPADDR_SET =				0x11,
	NETDEVICE_CMD_IPADDR_GET =				0x12,
	NETDEVICE_CMD_NETMASK_SET =				0x13,
	NETDEVICE_CMD_NETMASK_GET =				0x14,
	NETDEVICE_CMD_GATEWAY_SET =				0x15,
	NETDEVICE_CMD_GATEWAY_GET =				0x16,
	NETDEVICE_CMD_DNSSERVER_SET =			0x17,
	NETDEVICE_CMD_DNSSERVER_GET =			0x18,
	NETDEVICE_CMD_MAC_SET =			0x21,
	NETDEVICE_CMD_MAC_GET =			0x22,
}netdevice_cmd_t;

typedef enum
{
	NETSOCKET_PROTOCOL_TCP = 1,
	NETSOCKET_PROTOCOL_UDP,
	NETSOCKET_PROTOCOL_MACRAW,
	NETSOCKET_PROTOCOL_IPRAW,
}netsocket_protocol_t;

typedef enum
{
	NETSOCKET_TYPE_SERVER = 1,
	NETSOCKET_TYPE_CLIENT,
}netsocket_type_t;

typedef enum
{
	NETSOCKET_STATE_INIT = 0,
	NETSOCKET_STATE_ESTABLISHED = 1,
	NETSOCKET_STATE_CLOSED = 2,
	NETSOCKET_STATE_LISTEN = 3,
	NETSOCKET_STATE_DISCONNING = 4,
	NETSOCKET_STATE_CLOSING = 5,
}netsocket_state_t;

typedef enum
{
	NETSOCKET_CMD_PROTOCOL_SET =	0x01,
	NETSOCKET_CMD_PROTOCOL_GET =	0x02,
	NETSOCKET_CMD_TYPE_SET =			0x03,
	NETSOCKET_CMD_TYPE_GET =			0x04,
	
	NETSOCKET_CMD_IP_SET =				0x11,
	NETSOCKET_CMD_IP_GET =				0x12,
	NETSOCKET_CMD_PORT_SET =			0x13,
	NETSOCKET_CMD_PORT_GET =			0x14,
	NETSOCKET_CMD_SIP_SET =				0x15,
	NETSOCKET_CMD_SIP_GET =				0x16,
	NETSOCKET_CMD_SPORT_SET =			0x17,
	NETSOCKET_CMD_SPORT_GET =			0x18,
	
	NETSOCKET_CMD_HOSTNAME_SET =			0x21,
	NETSOCKET_CMD_HOSTNAME_GET =			0x22,
	NETSOCKET_CMD_PORTNAME_SET =			0x23,
	NETSOCKET_CMD_PORTNAME_GET =			0x24,
}netsocket_cmd_t;

typedef union
{
   uint32_t u32;
   uint8_t  u8[4];
}ip_addr_t;

//typedef union 
//{
//	char  u8[6];
//}mac_addr_t;

#endif
